#powerline
#source "$HOME/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# remap prefix to C-z
set -g prefix C-x
unbind C-b
bind C-x send-prefix

# mouse scrolling and selection
set -g mouse off

#mode keys
setw -g mode-keys vi

# 256-color terminal
set -g default-terminal "rxvt-unicode-256color"

# scroll limit
set -g history-limit 100000

# reload config without killing server
bind r source-file ~/.tmux.conf \; display-message "  Config reloaded..."

#### Theme (Solarized 256)
source ~/.tmux/tmux-colors-solarized/tmuxcolors-256.conf

##status
set -g status on
set -g status-interval 2
bind-key -n C-B set -g status

# faster response
set-option -sg escape-time 0

# swiching to last window like screen
bind-key C-z last-window

# send C-z-z sends C-z to the shell
bind-key z send-prefix

# xterm keys!
set-window-option -g xterm-keys on

# sane splitting
bind e split-window -h -c '#{pane_current_path}'
bind o split-window -v -c '#{pane_current_path}'
#bind -n C-E split-window -h
#bind -n C-O split-window -v

# nova janela com t/Ctrl-shift-t
bind t new-window -c '#{pane_current_path}'
#bind -n C-T new-window
# nova janela com Ctrl-shift-w
#bind -n C-W kill-window
bind k kill-server

# switch between windows Ctrl-[pagedown|pageup]
bind -n C-PageDown next-window
bind -n C-PageUp previous-window

# move windows Ctrl-shift-[left|right]
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# navigating around panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-Left if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-Down if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-Up if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-Right if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-Left select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-Down select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-Up select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-Right select-pane -R

# vi keys
set-option -g status-keys vi
#setw -g mode-keys vi

# usar Escape para entrar no modo copia,
# v para selecionar, p para colar,
# = para lista de buffer
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind -n C-y run "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
#bind -n C-p run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

bind -n M-Enter send-keys C-a 'sudo ' C-e
bind -n M-v run 'xrandr --output VGA1 --auto --left-of LVDS1'
bind -n M-V run 'xrandr --output VGA1 --off'

bind -n M-z resize-pane -Z
bind -n M-m resize-pane -Z

# TPM Plugins

#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'nickdiego/tmux-resurrect'

set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'custom_session'

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins/'

# Initialize powerline
source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run-shell '~/.tmux/plugins/tpm/tpm'
